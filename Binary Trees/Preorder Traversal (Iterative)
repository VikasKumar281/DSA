/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */

// // ITERATIVE APPROACH =================================================>


class Solution {
public:
    vector<int> preorderTraversal(TreeNode* root) {
        vector<int> preorder;
        stack<TreeNode*>s;
        s.push(root);

        if(root == NULL){
            return preorder;
        }

        while(s.size()>0){
            TreeNode* temp = s.top();
            s.pop();

            preorder.push_back(temp->val);

            if(temp->right !=NULL){
                s.push(temp->right);
            }
             if(temp->left !=NULL){
                s.push(temp->left);
            }
           
           
        }
        return preorder;
    }
};
