/*
struct Node {
    int data;
    Node *left;
    Node *right;

    Node(int val) {
        data = val;
        left = right = NULL;
    }
};
*/

class Solution {
  public:
    vector<int> zigZagTraversal(Node* root) {
     vector<int> result;
     if(root == NULL){
         return result;
     }
     
     queue<Node*> q;
     q.push(root);
     
     bool direction = true;
     
     while(!q.empty()){
         int size = q.size();
         vector<int>temp(size);
         for(int i =0;i<size;i++){
             Node *front = q.front();
             q.pop();
             
             int index = direction ? i : size-i-1;
             temp[index] = front->data;
             
             if(front->left){
                 q.push(front->left);
             }
             if(front->right){
                 q.push(front->right);
             }
            
         }
         direction = !direction;
        
         for(auto it:temp){
            result.push_back(it);     
         }
     }
     
     return result;
    }
};
